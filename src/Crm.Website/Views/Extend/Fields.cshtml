@using Crm.Api;
@for (int count = 0; count < this.ViewBag.fields.Count; ++count)
{
    string dataRequiredAttr = "";
    FieldInfo field = this.ViewBag.fields[count];
<div class="control-group">
    <label class="control-label">
        @field.Name
        @if (field.Required) { 
            <font style="color: Red">*</font>
        }
    </label>
    <div class="controls">
    @if (field.Required) { 
        dataRequiredAttr = "data-required = 'true'";
    }
    @switch (field.Type)
    {
        case FieldType.String:
            StringFieldConfigInfo stringField = ((StringFieldConfigInfo)field.ConfigInfo);
            <input type="text" data-property-type="String" class="input-xlarge" name="@string.Format("field{0}", field.ID)" @this.Html.Raw(dataRequiredAttr) value="@stringField.DefaultValue"/>
            break;
        case FieldType.Text:
            StringFieldConfigInfo textField = ((StringFieldConfigInfo)field.ConfigInfo);
            <textarea class="input-xlarge" data-property-type="String" name="@string.Format("field{0}", field.ID)" @this.Html.Raw(dataRequiredAttr) rows="3" >@textField.DefaultValue</textarea>
            break;
        case FieldType.DropdownList:
            ListFieldConfigInfo dropdownFieldInfo = ((ListFieldConfigInfo)field.ConfigInfo);
            <select class="input-xlarge" data-property-type="String"  @this.Html.Raw(dataRequiredAttr) name="@string.Format("field{0}", field.ID)">
                <option></option>
                @foreach (string item in dropdownFieldInfo.SelectList)
                {
                    if (item == dropdownFieldInfo.DefaultValue)
                    {
                    <option selected="selected">@item</option>
                    }
                    else
                    {
                    <option>@item</option>    
                    }
                }
            </select>
            break;
        case FieldType.RadioList:
            ListFieldConfigInfo radioFieldInfo = ((ListFieldConfigInfo)field.ConfigInfo);
            foreach (string item in radioFieldInfo.SelectList)
            {
                <label class="radio">
                    @if (item == radioFieldInfo.DefaultValue)
                    {
                    <input type="radio" name="@string.Format("field{0}", field.ID)" @this.Html.Raw(dataRequiredAttr) checked="checked" value="@item"/>
                    }
                    else
                    {
                    <input type="radio" name="@string.Format("field{0}", field.ID)" @this.Html.Raw(dataRequiredAttr) value="@item"/>
                    }
                    @item
                </label>
            }
            break;
        case FieldType.CheckboxList:
            CheckboxFieldConfigInfo checkFieldInfo = ((CheckboxFieldConfigInfo)field.ConfigInfo);
            foreach (string item in checkFieldInfo.SelectList)
            {
                <label class="checkbox">
                    @if (checkFieldInfo.DefaultValues.Contains(item))
                    {
                    <input type="checkbox" name="@string.Format("field{0}", field.ID)" @this.Html.Raw(dataRequiredAttr) checked="checked" value="@item"/>
                    }
                    else
                    {
                    <input type="checkbox" name="@string.Format("field{0}", field.ID)" @this.Html.Raw(dataRequiredAttr) value="@item"/>
                    }
                    @item
                </label>
            }
            break;
    }
    </div>
</div>
}